# Queries
from queries import user_exists
from queries import insert_user
from queries import deactivate_user

# Helpers
from utils.helpers import format_text

# Misc
import json


async def process_start_command(chat, match, logger):
    has_last_name = lambda u: u.get('last_name', '') != ''
    first_name = chat.sender.get('first_name')
    fullname = first_name

    if has_last_name(chat.sender):
        fullname = first_name + ' ' + chat.sender.get('last_name')

    greeting = format_text('''
    –ê—Å—Å–∞–ª–æ–º—É –∞–ª–∞–π–∫—É–º {name}!
    –í–æ–¥–∏–π –±–æ–∑–æ—Ä–≥–∞ —Ö—É—à –∫–µ–ª–∏–±—Å–∏–∑.
    ''')

    await chat.send_chat_action('typing')
    await insert_user(chat.bot.pg_pool, chat.sender)

    if not await user_exists(chat.bot.pg_pool, chat.sender):
        logger.info('New user %s requested /start', chat.sender)
        await chat.send_text(greeting.format(name=fullname))


async def process_menu_command(chat, match, logger):
    info = format_text('''
    *–ú–ï–ù–Æ*

    /ads - —ç—ä–ª–æ–Ω–ª–∞—Ä
    /subscribe - –æ–±—É–Ω–∞
    /rules - –∫–∞–Ω–∞–ª “õ–æ–∏–¥–∞–ª–∞—Ä–∏
    /contact - –∞–¥–º–∏–Ω–ª–∞—Ä –±–∏–ª–∞–Ω –±–æ“ì–ª–∞–Ω–∏—à

    ''')
    logger.info('Menu requested by %s', chat.sender)
    await chat.send_chat_action('typing')
    await chat.send_text(info, parse_mode='Markdown', disable_web_page_preview=True)


async def process_rules_command(chat, match, logger):
    info = format_text('''
    *–•–ò–ó–ú–ê–¢* *–®–ê–†–¢–õ–ê–†–ò* *–í–ê* *“ö–û–ò–î–ê–õ–ê–†*

    1. –ë–∏—Ä –∫—É–Ω–¥–∞ –±–∏—Ä —Ç—É—Ä –±—û–π–∏—á–∞ –±–∏—Ç—Ç–∞–¥–∞–Ω –æ—Ä—Ç–∏“õ —ç—ä–ª–æ–Ω –±–µ—Ä–∏—à –º—É–º–∫–∏–Ω —ç–º–∞—Å.
    ''')
    logger.info('Rules requested by %s', chat.sender)
    await chat.send_chat_action('typing')
    await chat.send_text(info, parse_mode='Markdown', disable_web_page_preview=True)


async def process_contact_command(chat, match, logger):
    logger.info('Contact requested by %s', chat.sender)

    contacts = format_text('''
    *–ê–¥–º–∏–Ω–ª–∞—Ä:*

    {admins}
    ''')

    admins = []
    for admin in await get_admins(chat.bot.pg_pool):
        admins.append('@' + admin)

    text = contacts.format(admins=admins).replace('\'', '')

    await chat.send_text(text, parse_mode='Markdown', disable_web_page_preview=True)


async def process_stop_command(chat, match, logger):
    farewell = format_text('''
    “ö–∏–∑–∏“õ–∏—à —É—á—É–Ω —Ä–∞“≥–º–∞—Ç, {name}.
    [–ö–∞–Ω–∞–ª–∏–º–∏–∑–Ω–∏](https://t.me/vodiybozor) –∫—É–∑–∞—Ç–∏—à–¥–∞ –¥–∞–≤–æ–º —ç—Ç–∏–Ω–≥.
    ''')
    await deactivate_user(chat.bot.pg_pool, chat.sender)
    logger.info('%s deactivated', chat.sender)
    await chat.send_chat_action('typing')
    await chat.send_text(
        farewell.format(name=chat.sender['first_name']),
        parse_mode='Markdown',
        disable_web_page_preview=True)


async def process_unknown_command(chat, match, logger):
    question = format_text('''
    {name}, “õ–∏–∑–∏“õ–∏—à –±–∏–ª–¥–∏—Ä–≥–∞–Ω–∏–Ω–≥–∏–∑ —É—á—É–Ω —Ä–∞“≥–º–∞—Ç.

    “≤–æ–∑–∏—Ä–¥–∞ –±—É –±—û–ª–∏–º –¥–∞—Å—Ç—É—Ä–ª–∞—à—Ç–∏—Ä–∏–ª—è–ø—Ç–∏.
    ''')
    # question = format_text('''
    # {name}, –º–µ–Ω –±–æ—Ç–º–∞–Ω. –ë—É–Ω–∞“õ–∞ –≥–∞–ø–ª–∞—Ä–Ω–∏ —Ç—û“ì—Ä–∏—Å–∏ —Ç—É—à—É–Ω–º–∞–π–º–∞–Ω. –ú–µ–Ω —Ñ–∞“õ–∞—Ç —á–æ–π –¥–∞–º–ª–∞–π–º–∞–Ω —Ö–æ–ª–æ—Å. üòÉ

    # –ë–∞–ª–∫–∏, –∞–¥–º–∏–Ω–ª–∞—Ä–≥–∞ –±–∏—Ä–æ—Ä –≥–∞–ø–∏–Ω–≥–∏–∑ –±–æ—Ä–¥–∏—Ä?
    # ''')
    keyboard = [
        [
            {
                'text': '–¢–µ–ª–µ—Ñ–æ–Ω —Ä–∞“õ–∞–º —é–±–æ—Ä–∏—à',
                'request_contact': True
            }
        ]
        # ['üëÆüèª –¥–º–∏–Ω –∫–µ—Ä–∞–∫', 'üìÉ –ú–µ–Ω—é–≥–∞ “õ–∞–π—Ç–∏—à'],
    ]
    reply_keyboard_markup = {
        'keyboard': keyboard,
        'resize_keyboard': True,
        'one_time_keyboard': True
    }

    logger.info('Unknown requested by %s', chat.sender)
    await chat.send_chat_action('typing')
    await chat.send_text(
        question.format(name=chat.sender['first_name']),
        parse_mode='Markdown',
        disable_web_page_preview=True,
        reply_markup=json.dumps(reply_keyboard_markup))
