# Queries
from queries.users import user_exists
from queries.users import insert_user
from queries.users import deactivate_user
from queries.users import get_admins

# Helpers
from utils.helpers import format_text

# Misc json


async def process_start_command(chat, match, logger):
    greeting = format_text('''
    –ê—Å—Å–∞–ª–æ–º—É –∞–ª–∞–π–∫—É–º {name}!
    –í–æ–¥–∏–π –±–æ–∑–æ—Ä–≥–∞ —Ö—É—à –∫–µ–ª–∏–±—Å–∏–∑.
    ''')

    await insert_user(chat.bot.pg_pool, chat.sender)

    if await user_exists(chat.bot.pg_pool, chat.sender):
        logger.info('User %s already exists', chat.sender)

    await chat.send_text(greeting.format(name=chat.sender['first_name']))


async def process_menu_command(chat, match, logger):
    info = format_text('''
    *–ú–ï–ù–Æ*

    /ads - —ç—ä–ª–æ–Ω–ª–∞—Ä
    /rules - –∫–∞–Ω–∞–ª “õ–æ–∏–¥–∞–ª–∞—Ä–∏
    /contact - –∞–¥–º–∏–Ω–ª–∞—Ä –±–∏–ª–∞–Ω –±–æ“ì–ª–∞–Ω–∏—à
    /stop - –±–æ—Ç–Ω–∏ —Ç—û—Ö—Ç–∞—Ç–∏—à

    [–ö–∞–Ω–∞–ª –º–∞–Ω–∑–∏–ª–∏](https://t.me/vodiybozor)
    ''')
    logger.info('%s menu requested by', chat.sender)
    await chat.send_text(info, parse_mode='Markdown', disable_web_page_preview=True)


async def process_rules_command(chat, match, logger):
    info = format_text('''
    –•–∏–∑–º–∞—Ç —à–∞—Ä—Ç–ª–∞—Ä–∏
    ''')
    logger.info('%s eula requested by', chat.sender)
    await chat.send_text(info)


async def process_contact_command(chat, match, logger):
    logger.info('%s contact requested by', chat.sender)

    contacts = format_text('''
    *–ê–¥–º–∏–Ω–ª–∞—Ä:*

    {admins}
    ''')

    admins = []
    for admin in await get_admins(chat.bot.pg_pool):
        admins.append('@' + admin['username'])

    admins_text = '\n'.join(admins)
    await chat.send_text(contacts.format(admins=admins_text), parse_mode='Markdown', disable_web_page_preview=True)


async def process_stop_command(chat, match, logger):
    farewell = format_text('''
    “ö–∏–∑–∏“õ–∏—à —É—á—É–Ω —Ä–∞“≥–º–∞—Ç, {name}.
    [–ö–∞–Ω–∞–ª–∏–º–∏–∑–Ω–∏](https://t.me/vodiybozor) –∫—É–∑–∞—Ç–∏—à–¥–∞ –¥–∞–≤–æ–º —ç—Ç–∏–Ω–≥.
    ''')
    await deactivate_user(chat.bot.pg_pool, chat.sender)
    logger.info('%s deactivated', chat.sender)
    await chat.send_text(
        farewell.format(name=chat.sender['first_name']),
        parse_mode='Markdown',
        disable_web_page_preview=True)


async def process_unknown_command(chat, match, logger):
    question = format_text('''
    {name}, –º–µ–Ω –±–æ—Ç–º–∞–Ω. –ë—É–Ω–∞“õ–∞ –≥–∞–ø–ª–∞—Ä–Ω–∏ —Ç—û“ì—Ä–∏—Å–∏ —Ç—É—à—É–Ω–º–∞–π–º–∞–Ω. –ú–µ–Ω —Ñ–∞“õ–∞—Ç —á–æ–π –¥–∞–º–ª–∞–π–º–∞–Ω —Ö–æ–ª–æ—Å. üòÉ

    –ë–∞–ª–∫–∏, –∞–¥–º–∏–Ω–ª–∞—Ä–≥–∞ –±–∏—Ä–æ—Ä –≥–∞–ø–∏–Ω–≥–∏–∑ –±–æ—Ä–¥–∏—Ä?
    ''')
    keyboard = [
        ['üëÆüèª –ê–¥–º–∏–Ω –∫–µ—Ä–∞–∫', 'üìÉ –ú–µ–Ω—é–Ω–∏ –∫—û—Ä–º–æ“õ—á–∏–º–∞–Ω'],
    ]
    reply_keyboard_markup = {
        'keyboard': keyboard,
        'resize_keyboard': True,
        'one_time_keyboard': True
    }

    logger.info('%s unknown requested by', chat.sender)
    await chat.send_text(
        question.format(name=chat.sender['first_name']),
        parse_mode='Markdown',
        disable_web_page_preview=True,
        reply_markup=json.dumps(reply_keyboard_markup))
