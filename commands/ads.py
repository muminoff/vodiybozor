# Helpers
from utils.helpers import format_text

# json
import json


async def process_ads_command(chat, match, logger):
    info = format_text('''
    {name}, —ç—ä–ª–æ–Ω –±–µ—Ä–º–æ“õ—á–∏–º–∏—Å–∏–∑ —ë–∫–∏ —ç—ä–ª–æ–Ω–ª–∞—Ä–Ω–∏ –∫—û—Ä–º–æ“õ—á–∏–º–∏—Å–∏–∑?
    ''')
    keyboard = [
        ['–≠—ä–ª–æ–Ω –±–µ—Ä–º–æ“õ—á–∏–º–∞–Ω', '–≠—ä–ª–æ–Ω–ª–∞—Ä–Ω–∏ –∫—û—Ä–º–æ“õ—á–∏–º–∞–Ω'],
        ['–ú–µ–Ω—é–Ω–∏ –∫—û—Ä–º–æ“õ—á–∏–º–∞–Ω'],
    ]
    reply_keyboard_markup = {
        'keyboard': keyboard,
        'resize_keyboard': True,
        'one_time_keyboard': True
    }

    logger.info('%s ads requested by', chat.sender)
    await chat.send_text(
        info.format(name=chat.sender['first_name']),
        parse_mode='Markdown',
        disable_web_page_preview=True,
        reply_markup=json.dumps(reply_keyboard_markup))


async def create_ad_command(chat, match, logger):
    question = format_text('''
    –ñ—É–¥–∞ —è—Ö—à–∏. “ö–∞–Ω–¥–∞–π —ç—ä–ª–æ–Ω –±–µ—Ä–º–æ“õ—á–∏—Å–∏–∑?
    ''')
    keyboard = [
        ['–°–æ—Ç–º–æ“õ—á–∏–º–∞–Ω', '–û–ª–º–æ“õ—á–∏–º–∞–Ω'],
        ['–•–∏–∑–º–∞—Ç –≤–∞ —Ç–∞–∫–ª–∏—Ñ–ª–∞—Ä'],
    ]
    reply_keyboard_markup = {
        'keyboard': keyboard,
        'resize_keyboard': True,
        'one_time_keyboard': True
    }

    logger.info('%s ads requested by', chat.sender)
    await chat.send_text(
        question,
        parse_mode='Markdown',
        disable_web_page_preview=True,
        reply_markup=json.dumps(reply_keyboard_markup))


async def create_sale_ad_command(chat, match, logger):
    question = format_text('''
    –ù–∏–º–∞ —Å–æ—Ç–º–æ“õ—á–∏—Å–∏–∑?
    ''')
    keyboard = [
        ['üöó –ê–≤—Ç–æ-—É–ª–æ–≤', 'üè† –ö—û—á–º–∞—Å-–º—É–ª–∫'],
        ['üì∫ –ú–∞–∏—à–∏–π —Ç–µ—Ö–Ω–∏–∫–∞', 'üö™ –£–π-—Ä—û–∑“ì–æ—Ä –±—É—é–º–ª–∞—Ä–∏'],
        ['üëï –ö–∏–π–∏–º-–∫–µ—á–∞–∫', 'üö¥ –°–ø–æ—Ä—Ç –∞–Ω–∂–æ–º–ª–∞—Ä–∏'],
        ['üì± –¢–µ–ª–µ—Ñ–æ–Ω', ''],
    ]
    reply_keyboard_markup = {
        'keyboard': keyboard,
        'resize_keyboard': True,
        'one_time_keyboard': True
    }

    logger.info('%s ads requested by', chat.sender)
    await chat.send_text(
        question,
        parse_mode='Markdown',
        disable_web_page_preview=True,
        reply_markup=json.dumps(reply_keyboard_markup))


async def create_sale_ad_vehicle_command(chat, match, logger):
    question = format_text('''
    –ê–≤—Ç–æ-—É–ª–æ–≤ “≥–∞“õ–∏–¥–∞ “õ–∏—Å“õ–∞ –≤–∞ –ª—û–Ω–¥–∞ –º–∞—ä–ª—É–º–æ—Ç –±–µ—Ä–∏–Ω–≥.
    
    –≠—ä–ª–æ–Ω –±—É–Ω–¥–∞–π —Ñ–æ—Ä–º–∞—Ç–¥–∞ “õ–∞–±—É–ª “õ–∏–ª–∏–Ω–∞–¥–∏, –≤–µ—Ä–≥—É–ª –±–∏–ª–∞–Ω –∞–∂—Ä–∞—Ç–∏–± —ë–∑–∏–Ω–≥:
    ```
    –ê–≤—Ç–æ: –ù–æ–º–∏, –π–∏–ª–∏, –ø—Ä–æ–±–µ–≥, “≥–æ–ª–∞—Ç–∏, –Ω–∞—Ä—Ö–∏, —Ç–µ–ª–µ—Ñ–æ–Ω —Ä–∞“õ–∞–º (—ë–∫–∏ —Ç–µ–ª–µ–≥—Ä–∞–º)
    ```
    –ú–∞—Å–∞–ª–∞–Ω:
    ```
    –ê–≤—Ç–æ: Lacetti, 2015, 35000, —è—Ö—à–∏, 7000, +998931234567
    ```
    ```
    –ê–≤—Ç–æ: Nexia DOHC, 2009, 145000, —è—Ö—à–∏, 5000, @foobar
    ```
    ''')

#     #Galaxy #Note 3 sotiladi
#     :m: Xolati yaxshi
#     :package:–ö–æropka dakumenti bor
#     :moneybag:800.000 so'm
#     :phone:+998914898109
#     :triangular_flag_on_post:Andijon
#     Telegram:point_right: @Mamatxonov95

    logger.info('Vehicle create ad requested by %s', chat.sender)
    await chat.send_text(
        question,
        parse_mode='Markdown',
        disable_web_page_preview=True)


async def create_sale_ad_vehicle_accept_command(chat, match, logger):
    logger.info('Vehicle create ad requested by %s', chat.sender)

    ad_template = format_text('''
    *{name}* —Å–æ—Ç–∏–ª–∞–¥–∏!
    *–ô–∏–ª–∏:* {year}
    *–ü—Ä–æ–±–µ–≥:* {mileage}
    *“≤–æ–ª–∞—Ç–∏:* {status}
    *–ù–∞—Ä—Ö–∏:* {price}
    *–ú—É—Ä–æ–∂–∞–∞—Ç —É—á—É–Ω:* {contact}

    [–í–æ–¥–∏–π –±–æ–∑–æ—Ä](https://t.me/vodiybozor)
    ''')

    text = chat.message['text']
    keys = ['name', 'year', 'mileage', 'status', 'price', 'contact']
    __, values = text.split(':')
    values = values.strip(' ').split(',')
    ad_dict = dict(zip(keys, values))
    ad_text = ad_template.format(**ad_dict)

    # Post to channel
    # await channel.send_text(
    #     ad_text,
    #     parse_mode='Markdown',
    #     disable_web_page_preview=True)

    question = format_text('''
    –≠—ä–ª–æ–Ω —ë–∑–∏–± –æ–ª–∏–Ω–¥–∏.

    –†–∞—Å–º–∏ –±–æ—Ä–º–∏ –π—û“õ–º–∏?
    ''')
    keyboard = [
        ['‚úÖ –†–∞—Å–º –±–æ—Ä', '‚ùå –†–∞—Å–º –π—û“õ'],
    ]
    reply_keyboard_markup = {
        'keyboard': keyboard,
        'resize_keyboard': True,
        'one_time_keyboard': True
    }

    logger.info('Vehicle ad accepted from %s', chat.sender)
    await chat.send_text(
        question,
        parse_mode='Markdown',
        disable_web_page_preview=True,
        reply_markup=json.dumps(reply_keyboard_markup))


async def attach_image_to_ad_command(chat, match, logger):
    ask_image = format_text('''
    –†–∞—Å–º —é–±–æ—Ä–∏–Ω–≥.
    ''')
    logger.info('Image file sent by %s', chat.sender)
    await chat.send_text(ask_image)


async def attach_no_image_to_ad_command(chat, match, logger):
    ok_text = format_text('''
    –¢—É—à—É–Ω–∞—Ä–ª–∏.
    ''')
    logger.info('%s says no image', chat.sender)
    await chat.send_text(ok_text)
    await send_ad_acceptance_message(chat, match, logger)

async def send_ad_acceptance_message(chat, match, logger):
    accepted_text = format_text('''
    –≠—ä–ª–æ–Ω “õ–∞–±—É–ª “õ–∏–ª–∏–Ω–¥–∏ –≤–∞ –∞–¥–º–∏–Ω–ª–∞—Ä–≥–∞ —é–±–æ—Ä–∏–ª–¥–∏.
    –¢–µ–∑ –æ—Ä–∞–¥–∞ –∫–∞–Ω–∞–ª–≥–∞ —á–æ–ø —ç—Ç–∏–±, –±—É “≥–∞“õ–¥–∞ —Å–∏–∑–≥–∞ —Ö–∞–±–∞—Ä –±–µ—Ä–∞–º–∏–∑.
    ''')
    await chat.send_text(accepted_text)
